
Clock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000006ac  00000740  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000012  00800062  00800062  00000742  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000742  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000774  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000007b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d66  00000000  00000000  000007f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000060a  00000000  00000000  0000155e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008e5  00000000  00000000  00001b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000114  00000000  00000000  00002450  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000350  00000000  00000000  00002564  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000061d  00000000  00000000  000028b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002ed1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1c c0       	rjmp	.+56     	; 0x3a <__ctors_end>
   2:	36 c0       	rjmp	.+108    	; 0x70 <__bad_interrupt>
   4:	59 c1       	rjmp	.+690    	; 0x2b8 <__vector_2>
   6:	34 c0       	rjmp	.+104    	; 0x70 <__bad_interrupt>
   8:	33 c0       	rjmp	.+102    	; 0x70 <__bad_interrupt>
   a:	32 c0       	rjmp	.+100    	; 0x70 <__bad_interrupt>
   c:	bc c0       	rjmp	.+376    	; 0x186 <__vector_6>
   e:	30 c0       	rjmp	.+96     	; 0x70 <__bad_interrupt>
  10:	2f c0       	rjmp	.+94     	; 0x70 <__bad_interrupt>
  12:	2e c0       	rjmp	.+92     	; 0x70 <__bad_interrupt>
  14:	2d c0       	rjmp	.+90     	; 0x70 <__bad_interrupt>
  16:	2c c0       	rjmp	.+88     	; 0x70 <__bad_interrupt>
  18:	2b c0       	rjmp	.+86     	; 0x70 <__bad_interrupt>
  1a:	2a c0       	rjmp	.+84     	; 0x70 <__bad_interrupt>
  1c:	29 c0       	rjmp	.+82     	; 0x70 <__bad_interrupt>
  1e:	28 c0       	rjmp	.+80     	; 0x70 <__bad_interrupt>
  20:	27 c0       	rjmp	.+78     	; 0x70 <__bad_interrupt>
  22:	26 c0       	rjmp	.+76     	; 0x70 <__bad_interrupt>
  24:	25 c0       	rjmp	.+74     	; 0x70 <__bad_interrupt>
  26:	52 c0       	rjmp	.+164    	; 0xcc <lcdwriteint+0x5a>
  28:	59 c0       	rjmp	.+178    	; 0xdc <lcdwriteint+0x6a>
  2a:	60 c0       	rjmp	.+192    	; 0xec <lcdwriteint+0x7a>
  2c:	67 c0       	rjmp	.+206    	; 0xfc <lcdwriteint+0x8a>
  2e:	6e c0       	rjmp	.+220    	; 0x10c <lcdwriteint+0x9a>
  30:	75 c0       	rjmp	.+234    	; 0x11c <lcdwriteint+0xaa>
  32:	7c c0       	rjmp	.+248    	; 0x12c <lcdwriteint+0xba>
  34:	83 c0       	rjmp	.+262    	; 0x13c <lcdwriteint+0xca>
  36:	8a c0       	rjmp	.+276    	; 0x14c <lcdwriteint+0xda>
  38:	91 c0       	rjmp	.+290    	; 0x15c <lcdwriteint+0xea>

0000003a <__ctors_end>:
  3a:	11 24       	eor	r1, r1
  3c:	1f be       	out	0x3f, r1	; 63
  3e:	cf e5       	ldi	r28, 0x5F	; 95
  40:	d4 e0       	ldi	r29, 0x04	; 4
  42:	de bf       	out	0x3e, r29	; 62
  44:	cd bf       	out	0x3d, r28	; 61

00000046 <__do_copy_data>:
  46:	10 e0       	ldi	r17, 0x00	; 0
  48:	a0 e6       	ldi	r26, 0x60	; 96
  4a:	b0 e0       	ldi	r27, 0x00	; 0
  4c:	ec ea       	ldi	r30, 0xAC	; 172
  4e:	f6 e0       	ldi	r31, 0x06	; 6
  50:	02 c0       	rjmp	.+4      	; 0x56 <__do_copy_data+0x10>
  52:	05 90       	lpm	r0, Z+
  54:	0d 92       	st	X+, r0
  56:	a2 36       	cpi	r26, 0x62	; 98
  58:	b1 07       	cpc	r27, r17
  5a:	d9 f7       	brne	.-10     	; 0x52 <__do_copy_data+0xc>

0000005c <__do_clear_bss>:
  5c:	20 e0       	ldi	r18, 0x00	; 0
  5e:	a2 e6       	ldi	r26, 0x62	; 98
  60:	b0 e0       	ldi	r27, 0x00	; 0
  62:	01 c0       	rjmp	.+2      	; 0x66 <.do_clear_bss_start>

00000064 <.do_clear_bss_loop>:
  64:	1d 92       	st	X+, r1

00000066 <.do_clear_bss_start>:
  66:	a4 37       	cpi	r26, 0x74	; 116
  68:	b2 07       	cpc	r27, r18
  6a:	e1 f7       	brne	.-8      	; 0x64 <.do_clear_bss_loop>
  6c:	0f d2       	rcall	.+1054   	; 0x48c <main>
  6e:	1c c3       	rjmp	.+1592   	; 0x6a8 <_exit>

00000070 <__bad_interrupt>:
  70:	c7 cf       	rjmp	.-114    	; 0x0 <__vectors>

00000072 <lcdwriteint>:
			LEDg();
			break;
	}
}
void lcdwriteint(int n, int ch, char dot) {
	switch(n) {
  72:	82 30       	cpi	r24, 0x02	; 2
  74:	91 05       	cpc	r25, r1
  76:	79 f0       	breq	.+30     	; 0x96 <lcdwriteint+0x24>
  78:	1c f4       	brge	.+6      	; 0x80 <lcdwriteint+0xe>
  7a:	01 97       	sbiw	r24, 0x01	; 1
  7c:	39 f0       	breq	.+14     	; 0x8c <lcdwriteint+0x1a>
  7e:	1a c0       	rjmp	.+52     	; 0xb4 <lcdwriteint+0x42>
  80:	83 30       	cpi	r24, 0x03	; 3
  82:	91 05       	cpc	r25, r1
  84:	69 f0       	breq	.+26     	; 0xa0 <lcdwriteint+0x2e>
  86:	04 97       	sbiw	r24, 0x04	; 4
  88:	81 f0       	breq	.+32     	; 0xaa <lcdwriteint+0x38>
  8a:	14 c0       	rjmp	.+40     	; 0xb4 <lcdwriteint+0x42>
		case 1:
			LED1();
  8c:	c2 9a       	sbi	0x18, 2	; 24
			led2();
  8e:	90 98       	cbi	0x12, 0	; 18
			led3();
  90:	91 98       	cbi	0x12, 1	; 18
			led4();
  92:	ad 98       	cbi	0x15, 5	; 21
			break;
  94:	13 c0       	rjmp	.+38     	; 0xbc <lcdwriteint+0x4a>
		case 2:
			led1();
  96:	c2 98       	cbi	0x18, 2	; 24
			LED2();
  98:	90 9a       	sbi	0x12, 0	; 18
			led3();
  9a:	91 98       	cbi	0x12, 1	; 18
			led4();
  9c:	ad 98       	cbi	0x15, 5	; 21
			break;
  9e:	0e c0       	rjmp	.+28     	; 0xbc <lcdwriteint+0x4a>
		case 3:
			led1();
  a0:	c2 98       	cbi	0x18, 2	; 24
			led2();
  a2:	90 98       	cbi	0x12, 0	; 18
			LED3();
  a4:	91 9a       	sbi	0x12, 1	; 18
			led4();
  a6:	ad 98       	cbi	0x15, 5	; 21
			break;
  a8:	09 c0       	rjmp	.+18     	; 0xbc <lcdwriteint+0x4a>
		case 4:
			led1();
  aa:	c2 98       	cbi	0x18, 2	; 24
			led2();
  ac:	90 98       	cbi	0x12, 0	; 18
			led3();
  ae:	91 98       	cbi	0x12, 1	; 18
			LED4();
  b0:	ad 9a       	sbi	0x15, 5	; 21
			break;
  b2:	04 c0       	rjmp	.+8      	; 0xbc <lcdwriteint+0x4a>
		default: 
			LED1();
  b4:	c2 9a       	sbi	0x18, 2	; 24
			LED2();
  b6:	90 9a       	sbi	0x12, 0	; 18
			LED3();
  b8:	91 9a       	sbi	0x12, 1	; 18
			LED4();
  ba:	ad 9a       	sbi	0x15, 5	; 21
			break;
	}
	switch(ch) {
  bc:	6a 30       	cpi	r22, 0x0A	; 10
  be:	71 05       	cpc	r23, r1
  c0:	08 f0       	brcs	.+2      	; 0xc4 <lcdwriteint+0x52>
  c2:	54 c0       	rjmp	.+168    	; 0x16c <lcdwriteint+0xfa>
  c4:	fb 01       	movw	r30, r22
  c6:	ed 5e       	subi	r30, 0xED	; 237
  c8:	ff 4f       	sbci	r31, 0xFF	; 255
  ca:	09 94       	ijmp
		case 0:
			LEDa();
  cc:	c4 98       	cbi	0x18, 4	; 24
			LEDb();
  ce:	92 98       	cbi	0x12, 2	; 18
			LEDc();
  d0:	ab 98       	cbi	0x15, 3	; 21
			LEDd();
  d2:	a9 98       	cbi	0x15, 1	; 21
			LEDe();
  d4:	a8 98       	cbi	0x15, 0	; 21
			LEDf();
  d6:	c5 98       	cbi	0x18, 5	; 24
			LEDG();
  d8:	ac 9a       	sbi	0x15, 4	; 21
			break;
  da:	4f c0       	rjmp	.+158    	; 0x17a <lcdwriteint+0x108>
		case 1: 
			LEDA();
  dc:	c4 9a       	sbi	0x18, 4	; 24
			LEDb();
  de:	92 98       	cbi	0x12, 2	; 18
			LEDc();
  e0:	ab 98       	cbi	0x15, 3	; 21
			LEDD();
  e2:	a9 9a       	sbi	0x15, 1	; 21
			LEDE();
  e4:	a8 9a       	sbi	0x15, 0	; 21
			LEDF();
  e6:	c5 9a       	sbi	0x18, 5	; 24
			LEDG();
  e8:	ac 9a       	sbi	0x15, 4	; 21
			break;
  ea:	47 c0       	rjmp	.+142    	; 0x17a <lcdwriteint+0x108>
		case 2:
			LEDa();
  ec:	c4 98       	cbi	0x18, 4	; 24
			LEDb();
  ee:	92 98       	cbi	0x12, 2	; 18
			LEDC();
  f0:	ab 9a       	sbi	0x15, 3	; 21
			LEDd();
  f2:	a9 98       	cbi	0x15, 1	; 21
			LEDe();
  f4:	a8 98       	cbi	0x15, 0	; 21
			LEDF();
  f6:	c5 9a       	sbi	0x18, 5	; 24
			LEDg(); 
  f8:	ac 98       	cbi	0x15, 4	; 21
			break;
  fa:	3f c0       	rjmp	.+126    	; 0x17a <lcdwriteint+0x108>
		case 3:
			LEDa();
  fc:	c4 98       	cbi	0x18, 4	; 24
			LEDb();
  fe:	92 98       	cbi	0x12, 2	; 18
			LEDc();
 100:	ab 98       	cbi	0x15, 3	; 21
			LEDd();
 102:	a9 98       	cbi	0x15, 1	; 21
			LEDE();
 104:	a8 9a       	sbi	0x15, 0	; 21
			LEDF();
 106:	c5 9a       	sbi	0x18, 5	; 24
			LEDg(); 
 108:	ac 98       	cbi	0x15, 4	; 21
			break;
 10a:	37 c0       	rjmp	.+110    	; 0x17a <lcdwriteint+0x108>
		case 4:
			LEDA();
 10c:	c4 9a       	sbi	0x18, 4	; 24
			LEDb();
 10e:	92 98       	cbi	0x12, 2	; 18
			LEDc();
 110:	ab 98       	cbi	0x15, 3	; 21
			LEDD();
 112:	a9 9a       	sbi	0x15, 1	; 21
			LEDE();
 114:	a8 9a       	sbi	0x15, 0	; 21
			LEDf();
 116:	c5 98       	cbi	0x18, 5	; 24
			LEDg(); 
 118:	ac 98       	cbi	0x15, 4	; 21
			break;
 11a:	2f c0       	rjmp	.+94     	; 0x17a <lcdwriteint+0x108>
		case 5:
			LEDa();
 11c:	c4 98       	cbi	0x18, 4	; 24
			LEDB();
 11e:	92 9a       	sbi	0x12, 2	; 18
			LEDc();
 120:	ab 98       	cbi	0x15, 3	; 21
			LEDd();
 122:	a9 98       	cbi	0x15, 1	; 21
			LEDE();
 124:	a8 9a       	sbi	0x15, 0	; 21
			LEDf();
 126:	c5 98       	cbi	0x18, 5	; 24
			LEDg(); 
 128:	ac 98       	cbi	0x15, 4	; 21
			break;
 12a:	27 c0       	rjmp	.+78     	; 0x17a <lcdwriteint+0x108>
		case 6:
			LEDa();
 12c:	c4 98       	cbi	0x18, 4	; 24
			LEDB();
 12e:	92 9a       	sbi	0x12, 2	; 18
			LEDc();
 130:	ab 98       	cbi	0x15, 3	; 21
			LEDd();
 132:	a9 98       	cbi	0x15, 1	; 21
			LEDe();
 134:	a8 98       	cbi	0x15, 0	; 21
			LEDf();
 136:	c5 98       	cbi	0x18, 5	; 24
			LEDg(); 
 138:	ac 98       	cbi	0x15, 4	; 21
			break;
 13a:	1f c0       	rjmp	.+62     	; 0x17a <lcdwriteint+0x108>
		case 7:
			LEDa();
 13c:	c4 98       	cbi	0x18, 4	; 24
			LEDb();
 13e:	92 98       	cbi	0x12, 2	; 18
			LEDc();
 140:	ab 98       	cbi	0x15, 3	; 21
			LEDD();
 142:	a9 9a       	sbi	0x15, 1	; 21
			LEDE();
 144:	a8 9a       	sbi	0x15, 0	; 21
			LEDF();
 146:	c5 9a       	sbi	0x18, 5	; 24
			LEDG(); 
 148:	ac 9a       	sbi	0x15, 4	; 21
			break;
 14a:	17 c0       	rjmp	.+46     	; 0x17a <lcdwriteint+0x108>
		case 8:
			LEDa();
 14c:	c4 98       	cbi	0x18, 4	; 24
			LEDb();
 14e:	92 98       	cbi	0x12, 2	; 18
			LEDc();
 150:	ab 98       	cbi	0x15, 3	; 21
			LEDd();
 152:	a9 98       	cbi	0x15, 1	; 21
			LEDe();
 154:	a8 98       	cbi	0x15, 0	; 21
			LEDf();
 156:	c5 98       	cbi	0x18, 5	; 24
			LEDg(); 
 158:	ac 98       	cbi	0x15, 4	; 21
			break;
 15a:	0f c0       	rjmp	.+30     	; 0x17a <lcdwriteint+0x108>
		case 9:
			LEDa();
 15c:	c4 98       	cbi	0x18, 4	; 24
			LEDb();
 15e:	92 98       	cbi	0x12, 2	; 18
			LEDc();
 160:	ab 98       	cbi	0x15, 3	; 21
			LEDd();
 162:	a9 98       	cbi	0x15, 1	; 21
			LEDE();
 164:	a8 9a       	sbi	0x15, 0	; 21
			LEDf();
 166:	c5 98       	cbi	0x18, 5	; 24
			LEDg(); 
 168:	ac 98       	cbi	0x15, 4	; 21
			break;
 16a:	07 c0       	rjmp	.+14     	; 0x17a <lcdwriteint+0x108>
		default:
			LEDA();
 16c:	c4 9a       	sbi	0x18, 4	; 24
			LEDB();
 16e:	92 9a       	sbi	0x12, 2	; 18
			LEDC();
 170:	ab 9a       	sbi	0x15, 3	; 21
			LEDD();
 172:	a9 9a       	sbi	0x15, 1	; 21
			LEDE();
 174:	a8 9a       	sbi	0x15, 0	; 21
			LEDF();
 176:	c5 9a       	sbi	0x18, 5	; 24
			LEDg();
 178:	ac 98       	cbi	0x15, 4	; 21
			break;
	}
	switch(dot) {
 17a:	41 33       	cpi	r20, 0x31	; 49
 17c:	11 f4       	brne	.+4      	; 0x182 <lcdwriteint+0x110>
		case '1':
			LEDdp();
 17e:	aa 98       	cbi	0x15, 2	; 21
			break;
 180:	08 95       	ret
		default:
			LEDDP();
 182:	aa 9a       	sbi	0x15, 2	; 21
 184:	08 95       	ret

00000186 <__vector_6>:
int blink = 1;
char set = 0;
char dd = 0;

//Timer interrupt
ISR(TIMER1_COMPA_vect) {
 186:	1f 92       	push	r1
 188:	0f 92       	push	r0
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	0f 92       	push	r0
 18e:	11 24       	eor	r1, r1
 190:	2f 93       	push	r18
 192:	3f 93       	push	r19
 194:	4f 93       	push	r20
 196:	5f 93       	push	r21
 198:	6f 93       	push	r22
 19a:	7f 93       	push	r23
 19c:	8f 93       	push	r24
 19e:	9f 93       	push	r25
 1a0:	af 93       	push	r26
 1a2:	bf 93       	push	r27
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	ef 93       	push	r30
 1aa:	ff 93       	push	r31
	if(set == 0) {
 1ac:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <set>
 1b0:	81 11       	cpse	r24, r1
 1b2:	6f c0       	rjmp	.+222    	; 0x292 <__vector_6+0x10c>
		if(blink == 1) {
 1b4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 1b8:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__data_start+0x1>
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	61 f4       	brne	.+24     	; 0x1d8 <__vector_6+0x52>
			if(dd == 0) { PORTD |= (1<<PD7); dd = 1; }
 1c0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
 1c4:	81 11       	cpse	r24, r1
 1c6:	05 c0       	rjmp	.+10     	; 0x1d2 <__vector_6+0x4c>
 1c8:	97 9a       	sbi	0x12, 7	; 18
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__data_end>
 1d0:	03 c0       	rjmp	.+6      	; 0x1d8 <__vector_6+0x52>
			else { PORTD &=~ (1<<PD7); dd = 0; }
 1d2:	97 98       	cbi	0x12, 7	; 18
 1d4:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
		}
		if(sec<59) {
 1d8:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <sec>
 1dc:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <sec+0x1>
 1e0:	8b 33       	cpi	r24, 0x3B	; 59
 1e2:	91 05       	cpc	r25, r1
 1e4:	34 f4       	brge	.+12     	; 0x1f2 <__vector_6+0x6c>
			sec++;
 1e6:	01 96       	adiw	r24, 0x01	; 1
 1e8:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <sec+0x1>
 1ec:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <sec>
 1f0:	4e c0       	rjmp	.+156    	; 0x28e <__vector_6+0x108>
		}
		else {
			sec = 0;
 1f2:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <sec+0x1>
 1f6:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <sec>
			if(min<59) {
 1fa:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <min>
 1fe:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <min+0x1>
 202:	8b 33       	cpi	r24, 0x3B	; 59
 204:	91 05       	cpc	r25, r1
 206:	34 f4       	brge	.+12     	; 0x214 <__vector_6+0x8e>
				min++;
 208:	01 96       	adiw	r24, 0x01	; 1
 20a:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <min+0x1>
 20e:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <min>
 212:	29 c0       	rjmp	.+82     	; 0x266 <__vector_6+0xe0>
			}
			else {
				min = 0;
 214:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <min+0x1>
 218:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <min>
				if(hours<23) {
 21c:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <hours>
 220:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <hours+0x1>
 224:	87 31       	cpi	r24, 0x17	; 23
 226:	91 05       	cpc	r25, r1
 228:	34 f4       	brge	.+12     	; 0x236 <__vector_6+0xb0>
					hours++;
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <hours+0x1>
 230:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <hours>
 234:	04 c0       	rjmp	.+8      	; 0x23e <__vector_6+0xb8>
				}
				else {
					hours = 0;
 236:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <hours+0x1>
 23a:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <hours>
				}
				seg1 = div(hours, 10).quot;
 23e:	c0 91 72 00 	lds	r28, 0x0072	; 0x800072 <hours>
 242:	d0 91 73 00 	lds	r29, 0x0073	; 0x800073 <hours+0x1>
 246:	6a e0       	ldi	r22, 0x0A	; 10
 248:	70 e0       	ldi	r23, 0x00	; 0
 24a:	ce 01       	movw	r24, r28
 24c:	06 d2       	rcall	.+1036   	; 0x65a <__divmodhi4>
 24e:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <seg1+0x1>
 252:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <seg1>
				seg2 = div(hours, 10).rem;
 256:	6a e0       	ldi	r22, 0x0A	; 10
 258:	70 e0       	ldi	r23, 0x00	; 0
 25a:	ce 01       	movw	r24, r28
 25c:	fe d1       	rcall	.+1020   	; 0x65a <__divmodhi4>
 25e:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <seg2+0x1>
 262:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <seg2>
			}
			seg3 = div(min, 10).quot;
 266:	c0 91 70 00 	lds	r28, 0x0070	; 0x800070 <min>
 26a:	d0 91 71 00 	lds	r29, 0x0071	; 0x800071 <min+0x1>
 26e:	6a e0       	ldi	r22, 0x0A	; 10
 270:	70 e0       	ldi	r23, 0x00	; 0
 272:	ce 01       	movw	r24, r28
 274:	f2 d1       	rcall	.+996    	; 0x65a <__divmodhi4>
 276:	70 93 69 00 	sts	0x0069, r23	; 0x800069 <seg3+0x1>
 27a:	60 93 68 00 	sts	0x0068, r22	; 0x800068 <seg3>
			seg4 = div(min, 10).rem;
 27e:	6a e0       	ldi	r22, 0x0A	; 10
 280:	70 e0       	ldi	r23, 0x00	; 0
 282:	ce 01       	movw	r24, r28
 284:	ea d1       	rcall	.+980    	; 0x65a <__divmodhi4>
 286:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <seg4+0x1>
 28a:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <seg4>
		}
		TCNT1 = 0;
 28e:	1d bc       	out	0x2d, r1	; 45
 290:	1c bc       	out	0x2c, r1	; 44
	}
}
 292:	ff 91       	pop	r31
 294:	ef 91       	pop	r30
 296:	df 91       	pop	r29
 298:	cf 91       	pop	r28
 29a:	bf 91       	pop	r27
 29c:	af 91       	pop	r26
 29e:	9f 91       	pop	r25
 2a0:	8f 91       	pop	r24
 2a2:	7f 91       	pop	r23
 2a4:	6f 91       	pop	r22
 2a6:	5f 91       	pop	r21
 2a8:	4f 91       	pop	r20
 2aa:	3f 91       	pop	r19
 2ac:	2f 91       	pop	r18
 2ae:	0f 90       	pop	r0
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	0f 90       	pop	r0
 2b4:	1f 90       	pop	r1
 2b6:	18 95       	reti

000002b8 <__vector_2>:

//Button interrupt
ISR(INT1_vect) {
 2b8:	1f 92       	push	r1
 2ba:	0f 92       	push	r0
 2bc:	0f b6       	in	r0, 0x3f	; 63
 2be:	0f 92       	push	r0
 2c0:	11 24       	eor	r1, r1
 2c2:	2f 93       	push	r18
 2c4:	3f 93       	push	r19
 2c6:	4f 93       	push	r20
 2c8:	5f 93       	push	r21
 2ca:	6f 93       	push	r22
 2cc:	7f 93       	push	r23
 2ce:	8f 93       	push	r24
 2d0:	9f 93       	push	r25
 2d2:	af 93       	push	r26
 2d4:	bf 93       	push	r27
 2d6:	cf 93       	push	r28
 2d8:	df 93       	push	r29
 2da:	ef 93       	push	r30
 2dc:	ff 93       	push	r31
	GICR &=~ (1<<INT1);
 2de:	8b b7       	in	r24, 0x3b	; 59
 2e0:	8f 77       	andi	r24, 0x7F	; 127
 2e2:	8b bf       	out	0x3b, r24	; 59
	
	if(PIND & (1<<PD4)) {
 2e4:	84 9b       	sbis	0x10, 4	; 16
 2e6:	32 c0       	rjmp	.+100    	; 0x34c <__vector_2+0x94>
		if(set == 0) {
 2e8:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <set>
 2ec:	81 11       	cpse	r24, r1
 2ee:	1a c0       	rjmp	.+52     	; 0x324 <__vector_2+0x6c>
			set = 1;
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <set>
			seg = 1;
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <seg+0x1>
 2fe:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <seg>
			PORTD |= (1<<PD7);
 302:	97 9a       	sbi	0x12, 7	; 18
			lcdwriteint(0, 8, '1');
 304:	41 e3       	ldi	r20, 0x31	; 49
 306:	68 e0       	ldi	r22, 0x08	; 8
 308:	70 e0       	ldi	r23, 0x00	; 0
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	b1 de       	rcall	.-670    	; 0x72 <lcdwriteint>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 310:	2f ef       	ldi	r18, 0xFF	; 255
 312:	89 e6       	ldi	r24, 0x69	; 105
 314:	98 e1       	ldi	r25, 0x18	; 24
 316:	21 50       	subi	r18, 0x01	; 1
 318:	80 40       	sbci	r24, 0x00	; 0
 31a:	90 40       	sbci	r25, 0x00	; 0
 31c:	e1 f7       	brne	.-8      	; 0x316 <__vector_2+0x5e>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <__vector_2+0x68>
 320:	00 00       	nop
 322:	92 c0       	rjmp	.+292    	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
			_delay_ms(500);
		}
		else {
			if(seg < 3) {
 324:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <seg>
 328:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <seg+0x1>
 32c:	83 30       	cpi	r24, 0x03	; 3
 32e:	91 05       	cpc	r25, r1
 330:	34 f4       	brge	.+12     	; 0x33e <__vector_2+0x86>
				seg=seg+1;
 332:	01 96       	adiw	r24, 0x01	; 1
 334:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <seg+0x1>
 338:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <seg>
 33c:	85 c0       	rjmp	.+266    	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
			}
			else {
				seg = 1;
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <seg+0x1>
 346:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <seg>
 34a:	7e c0       	rjmp	.+252    	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
			}
		}
	}
	else if(set == 1) {
 34c:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <set>
 350:	81 30       	cpi	r24, 0x01	; 1
 352:	09 f0       	breq	.+2      	; 0x356 <__vector_2+0x9e>
 354:	68 c0       	rjmp	.+208    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
		if(seg == 1) {
 356:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <seg>
 35a:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <seg+0x1>
 35e:	81 30       	cpi	r24, 0x01	; 1
 360:	91 05       	cpc	r25, r1
 362:	31 f5       	brne	.+76     	; 0x3b0 <__vector_2+0xf8>
			if(hours<23) {
 364:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <hours>
 368:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <hours+0x1>
 36c:	87 31       	cpi	r24, 0x17	; 23
 36e:	91 05       	cpc	r25, r1
 370:	34 f4       	brge	.+12     	; 0x37e <__vector_2+0xc6>
				hours = hours + 1;
 372:	01 96       	adiw	r24, 0x01	; 1
 374:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <hours+0x1>
 378:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <hours>
 37c:	04 c0       	rjmp	.+8      	; 0x386 <__vector_2+0xce>
			}
			else {
				hours = 0;
 37e:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <hours+0x1>
 382:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <hours>
			}
			seg1 = div(hours, 10).quot;
 386:	c0 91 72 00 	lds	r28, 0x0072	; 0x800072 <hours>
 38a:	d0 91 73 00 	lds	r29, 0x0073	; 0x800073 <hours+0x1>
 38e:	6a e0       	ldi	r22, 0x0A	; 10
 390:	70 e0       	ldi	r23, 0x00	; 0
 392:	ce 01       	movw	r24, r28
 394:	62 d1       	rcall	.+708    	; 0x65a <__divmodhi4>
 396:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <seg1+0x1>
 39a:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <seg1>
			seg2 = div(hours, 10).rem;
 39e:	6a e0       	ldi	r22, 0x0A	; 10
 3a0:	70 e0       	ldi	r23, 0x00	; 0
 3a2:	ce 01       	movw	r24, r28
 3a4:	5a d1       	rcall	.+692    	; 0x65a <__divmodhi4>
 3a6:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <seg2+0x1>
 3aa:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <seg2>
 3ae:	34 c0       	rjmp	.+104    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
		}
		if(seg == 2) {
 3b0:	82 30       	cpi	r24, 0x02	; 2
 3b2:	91 05       	cpc	r25, r1
 3b4:	31 f5       	brne	.+76     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
			if(min<59) {
 3b6:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <min>
 3ba:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <min+0x1>
 3be:	8b 33       	cpi	r24, 0x3B	; 59
 3c0:	91 05       	cpc	r25, r1
 3c2:	34 f4       	brge	.+12     	; 0x3d0 <__vector_2+0x118>
				min++;
 3c4:	01 96       	adiw	r24, 0x01	; 1
 3c6:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <min+0x1>
 3ca:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <min>
 3ce:	04 c0       	rjmp	.+8      	; 0x3d8 <__vector_2+0x120>
			}
			else {
				min = 0;
 3d0:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <min+0x1>
 3d4:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <min>
			}
			seg3 = div(min, 10).quot;
 3d8:	c0 91 70 00 	lds	r28, 0x0070	; 0x800070 <min>
 3dc:	d0 91 71 00 	lds	r29, 0x0071	; 0x800071 <min+0x1>
 3e0:	6a e0       	ldi	r22, 0x0A	; 10
 3e2:	70 e0       	ldi	r23, 0x00	; 0
 3e4:	ce 01       	movw	r24, r28
 3e6:	39 d1       	rcall	.+626    	; 0x65a <__divmodhi4>
 3e8:	70 93 69 00 	sts	0x0069, r23	; 0x800069 <seg3+0x1>
 3ec:	60 93 68 00 	sts	0x0068, r22	; 0x800068 <seg3>
			seg4 = div(min, 10).rem;
 3f0:	6a e0       	ldi	r22, 0x0A	; 10
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	ce 01       	movw	r24, r28
 3f6:	31 d1       	rcall	.+610    	; 0x65a <__divmodhi4>
 3f8:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <seg4+0x1>
 3fc:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <seg4>
 400:	0b c0       	rjmp	.+22     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
		}
		if(seg == 3) {
 402:	03 97       	sbiw	r24, 0x03	; 3
 404:	49 f4       	brne	.+18     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
			set = 0;
 406:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <set>
			seg = 1;
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <seg+0x1>
 412:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <seg>
			PORTD &=~ (1<<PD7);
 416:	97 98       	cbi	0x12, 7	; 18
 418:	8f e3       	ldi	r24, 0x3F	; 63
 41a:	9c e9       	ldi	r25, 0x9C	; 156
 41c:	01 97       	sbiw	r24, 0x01	; 1
 41e:	f1 f7       	brne	.-4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 420:	00 c0       	rjmp	.+0      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 422:	00 00       	nop
 424:	11 c0       	rjmp	.+34     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
		}
		_delay_ms(10);
	}
	else {
		if(blink == 0) {
 426:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 42a:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__data_start+0x1>
 42e:	89 2b       	or	r24, r25
 430:	39 f4       	brne	.+14     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
			blink = 1;
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
 43a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
 43e:	04 c0       	rjmp	.+8      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
		}
		else {
			blink = 0;
 440:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__data_start+0x1>
 444:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__data_start>
 448:	9f ef       	ldi	r25, 0xFF	; 255
 44a:	20 e7       	ldi	r18, 0x70	; 112
 44c:	82 e0       	ldi	r24, 0x02	; 2
 44e:	91 50       	subi	r25, 0x01	; 1
 450:	20 40       	sbci	r18, 0x00	; 0
 452:	80 40       	sbci	r24, 0x00	; 0
 454:	e1 f7       	brne	.-8      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 456:	00 c0       	rjmp	.+0      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 458:	00 00       	nop
		}
	}
	
	_delay_ms(50);
	GIFR &=~ (1<<INTF0);
 45a:	8a b7       	in	r24, 0x3a	; 58
 45c:	8f 7b       	andi	r24, 0xBF	; 191
 45e:	8a bf       	out	0x3a, r24	; 58
	GICR |= (1<<INT1);
 460:	8b b7       	in	r24, 0x3b	; 59
 462:	80 68       	ori	r24, 0x80	; 128
 464:	8b bf       	out	0x3b, r24	; 59
};
 466:	ff 91       	pop	r31
 468:	ef 91       	pop	r30
 46a:	df 91       	pop	r29
 46c:	cf 91       	pop	r28
 46e:	bf 91       	pop	r27
 470:	af 91       	pop	r26
 472:	9f 91       	pop	r25
 474:	8f 91       	pop	r24
 476:	7f 91       	pop	r23
 478:	6f 91       	pop	r22
 47a:	5f 91       	pop	r21
 47c:	4f 91       	pop	r20
 47e:	3f 91       	pop	r19
 480:	2f 91       	pop	r18
 482:	0f 90       	pop	r0
 484:	0f be       	out	0x3f, r0	; 63
 486:	0f 90       	pop	r0
 488:	1f 90       	pop	r1
 48a:	18 95       	reti

0000048c <main>:

int main(void)
{
	DDRB |= (1<<PB2)|(1<<PB4)|(1<<PB5);
 48c:	87 b3       	in	r24, 0x17	; 23
 48e:	84 63       	ori	r24, 0x34	; 52
 490:	87 bb       	out	0x17, r24	; 23
	DDRC |= (1<<PC0)|(1<<PC1)|(1<<PC2)|(1<<PC3)|(1<<PC4)|(1<<PC5);
 492:	84 b3       	in	r24, 0x14	; 20
 494:	8f 63       	ori	r24, 0x3F	; 63
 496:	84 bb       	out	0x14, r24	; 20
	DDRD |= (1<<PD0)|(1<<PD1)|(1<<PD2)|(1<<PD7);
 498:	81 b3       	in	r24, 0x11	; 17
 49a:	87 68       	ori	r24, 0x87	; 135
 49c:	81 bb       	out	0x11, r24	; 17
	
	//Button interrupt
	MCUCR = (1<<ISC11)|(1<<ISC10);
 49e:	8c e0       	ldi	r24, 0x0C	; 12
 4a0:	85 bf       	out	0x35, r24	; 53
	GICR = (1<<INT1);
 4a2:	80 e8       	ldi	r24, 0x80	; 128
 4a4:	8b bf       	out	0x3b, r24	; 59
	GIFR = (1<<INTF1);
 4a6:	8a bf       	out	0x3a, r24	; 58
	
	//Timer setup
	TCCR1A = 0;
 4a8:	1f bc       	out	0x2f, r1	; 47
	TCCR1B |= (1<<CS12);
 4aa:	8e b5       	in	r24, 0x2e	; 46
 4ac:	84 60       	ori	r24, 0x04	; 4
 4ae:	8e bd       	out	0x2e, r24	; 46
	//OCR1A = 15625;
	OCR1A = 62498;
 4b0:	82 e2       	ldi	r24, 0x22	; 34
 4b2:	94 ef       	ldi	r25, 0xF4	; 244
 4b4:	9b bd       	out	0x2b, r25	; 43
 4b6:	8a bd       	out	0x2a, r24	; 42
	//OCR1A = 10000;
	TCNT1 = 0;
 4b8:	1d bc       	out	0x2d, r1	; 45
 4ba:	1c bc       	out	0x2c, r1	; 44
	TIMSK = 0b00010000;
 4bc:	80 e1       	ldi	r24, 0x10	; 16
 4be:	89 bf       	out	0x39, r24	; 57
		
	LEDDP();
 4c0:	aa 9a       	sbi	0x15, 2	; 21
	
	sei();
 4c2:	78 94       	sei
 4c4:	8c c0       	rjmp	.+280    	; 0x5de <main+0x152>
			
    while (1) 
    {
		while(set == 1) {
			LEDDD();
 4c6:	97 9a       	sbi	0x12, 7	; 18
			if(seg == 1) {				
 4c8:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <seg>
 4cc:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <seg+0x1>
 4d0:	01 97       	sbiw	r24, 0x01	; 1
 4d2:	c1 f5       	brne	.+112    	; 0x544 <main+0xb8>
				lcdwriteint(1, seg1, '1');
 4d4:	60 91 6c 00 	lds	r22, 0x006C	; 0x80006c <seg1>
 4d8:	70 91 6d 00 	lds	r23, 0x006D	; 0x80006d <seg1+0x1>
 4dc:	41 e3       	ldi	r20, 0x31	; 49
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	c7 dd       	rcall	.-1138   	; 0x72 <lcdwriteint>
 4e4:	8f e9       	ldi	r24, 0x9F	; 159
 4e6:	9f e0       	ldi	r25, 0x0F	; 15
 4e8:	01 97       	sbiw	r24, 0x01	; 1
 4ea:	f1 f7       	brne	.-4      	; 0x4e8 <main+0x5c>
 4ec:	00 c0       	rjmp	.+0      	; 0x4ee <main+0x62>
 4ee:	00 00       	nop
				_delay_ms(1);
				lcdwriteint(2, seg2, '1');
 4f0:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <seg2>
 4f4:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <seg2+0x1>
 4f8:	41 e3       	ldi	r20, 0x31	; 49
 4fa:	82 e0       	ldi	r24, 0x02	; 2
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	b9 dd       	rcall	.-1166   	; 0x72 <lcdwriteint>
 500:	8f e9       	ldi	r24, 0x9F	; 159
 502:	9f e0       	ldi	r25, 0x0F	; 15
 504:	01 97       	sbiw	r24, 0x01	; 1
 506:	f1 f7       	brne	.-4      	; 0x504 <main+0x78>
 508:	00 c0       	rjmp	.+0      	; 0x50a <main+0x7e>
 50a:	00 00       	nop
				_delay_ms(1);
				lcdwriteint(3, seg3, '0');
 50c:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <seg3>
 510:	70 91 69 00 	lds	r23, 0x0069	; 0x800069 <seg3+0x1>
 514:	40 e3       	ldi	r20, 0x30	; 48
 516:	83 e0       	ldi	r24, 0x03	; 3
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	ab dd       	rcall	.-1194   	; 0x72 <lcdwriteint>
 51c:	8f e9       	ldi	r24, 0x9F	; 159
 51e:	9f e0       	ldi	r25, 0x0F	; 15
 520:	01 97       	sbiw	r24, 0x01	; 1
 522:	f1 f7       	brne	.-4      	; 0x520 <main+0x94>
 524:	00 c0       	rjmp	.+0      	; 0x526 <main+0x9a>
 526:	00 00       	nop
				_delay_ms(1);
				lcdwriteint(4, seg4, '0');
 528:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <seg4>
 52c:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <seg4+0x1>
 530:	40 e3       	ldi	r20, 0x30	; 48
 532:	84 e0       	ldi	r24, 0x04	; 4
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	9d dd       	rcall	.-1222   	; 0x72 <lcdwriteint>
 538:	8f e9       	ldi	r24, 0x9F	; 159
 53a:	9f e0       	ldi	r25, 0x0F	; 15
 53c:	01 97       	sbiw	r24, 0x01	; 1
 53e:	f1 f7       	brne	.-4      	; 0x53c <main+0xb0>
 540:	00 c0       	rjmp	.+0      	; 0x542 <main+0xb6>
 542:	00 00       	nop
				_delay_ms(1);
			}
			if(seg == 2) {
 544:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <seg>
 548:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <seg+0x1>
 54c:	02 97       	sbiw	r24, 0x02	; 2
 54e:	c1 f5       	brne	.+112    	; 0x5c0 <main+0x134>
				lcdwriteint(1, seg1, '0');
 550:	60 91 6c 00 	lds	r22, 0x006C	; 0x80006c <seg1>
 554:	70 91 6d 00 	lds	r23, 0x006D	; 0x80006d <seg1+0x1>
 558:	40 e3       	ldi	r20, 0x30	; 48
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	89 dd       	rcall	.-1262   	; 0x72 <lcdwriteint>
 560:	8f e9       	ldi	r24, 0x9F	; 159
 562:	9f e0       	ldi	r25, 0x0F	; 15
 564:	01 97       	sbiw	r24, 0x01	; 1
 566:	f1 f7       	brne	.-4      	; 0x564 <main+0xd8>
 568:	00 c0       	rjmp	.+0      	; 0x56a <main+0xde>
 56a:	00 00       	nop
				_delay_ms(1);
				lcdwriteint(2, seg2, '0');
 56c:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <seg2>
 570:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <seg2+0x1>
 574:	40 e3       	ldi	r20, 0x30	; 48
 576:	82 e0       	ldi	r24, 0x02	; 2
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	7b dd       	rcall	.-1290   	; 0x72 <lcdwriteint>
 57c:	8f e9       	ldi	r24, 0x9F	; 159
 57e:	9f e0       	ldi	r25, 0x0F	; 15
 580:	01 97       	sbiw	r24, 0x01	; 1
 582:	f1 f7       	brne	.-4      	; 0x580 <main+0xf4>
 584:	00 c0       	rjmp	.+0      	; 0x586 <main+0xfa>
 586:	00 00       	nop
				_delay_ms(1);
				lcdwriteint(3, seg3, '1');
 588:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <seg3>
 58c:	70 91 69 00 	lds	r23, 0x0069	; 0x800069 <seg3+0x1>
 590:	41 e3       	ldi	r20, 0x31	; 49
 592:	83 e0       	ldi	r24, 0x03	; 3
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	6d dd       	rcall	.-1318   	; 0x72 <lcdwriteint>
 598:	8f e9       	ldi	r24, 0x9F	; 159
 59a:	9f e0       	ldi	r25, 0x0F	; 15
 59c:	01 97       	sbiw	r24, 0x01	; 1
 59e:	f1 f7       	brne	.-4      	; 0x59c <main+0x110>
 5a0:	00 c0       	rjmp	.+0      	; 0x5a2 <main+0x116>
 5a2:	00 00       	nop
				_delay_ms(1);
				lcdwriteint(4, seg4, '1');
 5a4:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <seg4>
 5a8:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <seg4+0x1>
 5ac:	41 e3       	ldi	r20, 0x31	; 49
 5ae:	84 e0       	ldi	r24, 0x04	; 4
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	5f dd       	rcall	.-1346   	; 0x72 <lcdwriteint>
 5b4:	8f e9       	ldi	r24, 0x9F	; 159
 5b6:	9f e0       	ldi	r25, 0x0F	; 15
 5b8:	01 97       	sbiw	r24, 0x01	; 1
 5ba:	f1 f7       	brne	.-4      	; 0x5b8 <main+0x12c>
 5bc:	00 c0       	rjmp	.+0      	; 0x5be <main+0x132>
 5be:	00 00       	nop
				_delay_ms(1);
			}
			if(seg == 3) {
 5c0:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <seg>
 5c4:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <seg+0x1>
 5c8:	03 97       	sbiw	r24, 0x03	; 3
 5ca:	49 f4       	brne	.+18     	; 0x5de <main+0x152>
				set = 0;
 5cc:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <set>
				seg = 1;
 5d0:	81 e0       	ldi	r24, 0x01	; 1
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <seg+0x1>
 5d8:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <seg>
				PORTD &=~ (1<<PD7);
 5dc:	97 98       	cbi	0x12, 7	; 18
	
	sei();
			
    while (1) 
    {
		while(set == 1) {
 5de:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <set>
 5e2:	81 30       	cpi	r24, 0x01	; 1
 5e4:	09 f4       	brne	.+2      	; 0x5e8 <main+0x15c>
 5e6:	6f cf       	rjmp	.-290    	; 0x4c6 <main+0x3a>
				set = 0;
				seg = 1;
				PORTD &=~ (1<<PD7);
			}
		}
		lcdwriteint(1, seg1, '0');
 5e8:	60 91 6c 00 	lds	r22, 0x006C	; 0x80006c <seg1>
 5ec:	70 91 6d 00 	lds	r23, 0x006D	; 0x80006d <seg1+0x1>
 5f0:	40 e3       	ldi	r20, 0x30	; 48
 5f2:	81 e0       	ldi	r24, 0x01	; 1
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	3d dd       	rcall	.-1414   	; 0x72 <lcdwriteint>
 5f8:	8f e9       	ldi	r24, 0x9F	; 159
 5fa:	9f e0       	ldi	r25, 0x0F	; 15
 5fc:	01 97       	sbiw	r24, 0x01	; 1
 5fe:	f1 f7       	brne	.-4      	; 0x5fc <main+0x170>
 600:	00 c0       	rjmp	.+0      	; 0x602 <main+0x176>
 602:	00 00       	nop
		_delay_ms(1);
		lcdwriteint(2, seg2, '0');
 604:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <seg2>
 608:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <seg2+0x1>
 60c:	40 e3       	ldi	r20, 0x30	; 48
 60e:	82 e0       	ldi	r24, 0x02	; 2
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	2f dd       	rcall	.-1442   	; 0x72 <lcdwriteint>
 614:	8f e9       	ldi	r24, 0x9F	; 159
 616:	9f e0       	ldi	r25, 0x0F	; 15
 618:	01 97       	sbiw	r24, 0x01	; 1
 61a:	f1 f7       	brne	.-4      	; 0x618 <main+0x18c>
 61c:	00 c0       	rjmp	.+0      	; 0x61e <main+0x192>
 61e:	00 00       	nop
		_delay_ms(1);
		lcdwriteint(3, seg3, '0');
 620:	60 91 68 00 	lds	r22, 0x0068	; 0x800068 <seg3>
 624:	70 91 69 00 	lds	r23, 0x0069	; 0x800069 <seg3+0x1>
 628:	40 e3       	ldi	r20, 0x30	; 48
 62a:	83 e0       	ldi	r24, 0x03	; 3
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	21 dd       	rcall	.-1470   	; 0x72 <lcdwriteint>
 630:	8f e9       	ldi	r24, 0x9F	; 159
 632:	9f e0       	ldi	r25, 0x0F	; 15
 634:	01 97       	sbiw	r24, 0x01	; 1
 636:	f1 f7       	brne	.-4      	; 0x634 <main+0x1a8>
 638:	00 c0       	rjmp	.+0      	; 0x63a <main+0x1ae>
 63a:	00 00       	nop
		_delay_ms(1);
		lcdwriteint(4, seg4, '0');
 63c:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <seg4>
 640:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <seg4+0x1>
 644:	40 e3       	ldi	r20, 0x30	; 48
 646:	84 e0       	ldi	r24, 0x04	; 4
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	13 dd       	rcall	.-1498   	; 0x72 <lcdwriteint>
 64c:	8f e9       	ldi	r24, 0x9F	; 159
 64e:	9f e0       	ldi	r25, 0x0F	; 15
 650:	01 97       	sbiw	r24, 0x01	; 1
 652:	f1 f7       	brne	.-4      	; 0x650 <main+0x1c4>
 654:	00 c0       	rjmp	.+0      	; 0x656 <main+0x1ca>
 656:	00 00       	nop
 658:	c2 cf       	rjmp	.-124    	; 0x5de <main+0x152>

0000065a <__divmodhi4>:
 65a:	97 fb       	bst	r25, 7
 65c:	07 2e       	mov	r0, r23
 65e:	16 f4       	brtc	.+4      	; 0x664 <__divmodhi4+0xa>
 660:	00 94       	com	r0
 662:	06 d0       	rcall	.+12     	; 0x670 <__divmodhi4_neg1>
 664:	77 fd       	sbrc	r23, 7
 666:	08 d0       	rcall	.+16     	; 0x678 <__divmodhi4_neg2>
 668:	0b d0       	rcall	.+22     	; 0x680 <__udivmodhi4>
 66a:	07 fc       	sbrc	r0, 7
 66c:	05 d0       	rcall	.+10     	; 0x678 <__divmodhi4_neg2>
 66e:	3e f4       	brtc	.+14     	; 0x67e <__divmodhi4_exit>

00000670 <__divmodhi4_neg1>:
 670:	90 95       	com	r25
 672:	81 95       	neg	r24
 674:	9f 4f       	sbci	r25, 0xFF	; 255
 676:	08 95       	ret

00000678 <__divmodhi4_neg2>:
 678:	70 95       	com	r23
 67a:	61 95       	neg	r22
 67c:	7f 4f       	sbci	r23, 0xFF	; 255

0000067e <__divmodhi4_exit>:
 67e:	08 95       	ret

00000680 <__udivmodhi4>:
 680:	aa 1b       	sub	r26, r26
 682:	bb 1b       	sub	r27, r27
 684:	51 e1       	ldi	r21, 0x11	; 17
 686:	07 c0       	rjmp	.+14     	; 0x696 <__udivmodhi4_ep>

00000688 <__udivmodhi4_loop>:
 688:	aa 1f       	adc	r26, r26
 68a:	bb 1f       	adc	r27, r27
 68c:	a6 17       	cp	r26, r22
 68e:	b7 07       	cpc	r27, r23
 690:	10 f0       	brcs	.+4      	; 0x696 <__udivmodhi4_ep>
 692:	a6 1b       	sub	r26, r22
 694:	b7 0b       	sbc	r27, r23

00000696 <__udivmodhi4_ep>:
 696:	88 1f       	adc	r24, r24
 698:	99 1f       	adc	r25, r25
 69a:	5a 95       	dec	r21
 69c:	a9 f7       	brne	.-22     	; 0x688 <__udivmodhi4_loop>
 69e:	80 95       	com	r24
 6a0:	90 95       	com	r25
 6a2:	bc 01       	movw	r22, r24
 6a4:	cd 01       	movw	r24, r26
 6a6:	08 95       	ret

000006a8 <_exit>:
 6a8:	f8 94       	cli

000006aa <__stop_program>:
 6aa:	ff cf       	rjmp	.-2      	; 0x6aa <__stop_program>
